@inherits UmbracoViewPage
@using Umbraco.Cms.Core.Models;

@{
    var homePage = Umbraco.AssignedContentItem.AncestorOrSelf<HomePage>();
    var navigationItems = homePage.MainNavigation;
}

<header class="header">
    <nav class="nav container">
        <div class="nav__data">
            <a href="@homePage.Url()" class="nav__logo">
                <i class="ri-planet-line"></i> RAMA
            </a>
            <div class="nav__toggle" id="nav-toggle">
                <i class="ri-menu-line nav__burger"></i>
                <i class="ri-close-line nav__close"></i>
            </div>
        </div>


        <div class="nav__menu" id="nav-menu">
            <ul class="nav__list">
                @if (navigationItems != null && navigationItems.Any())
                {
                    var dropdownId = 0;
                    foreach (var item in navigationItems)
                    {
                        var content = item.Content;
                        var title = content.Value("title");
                        var linkObject = content.Value("Link");
                        var link = linkObject as Umbraco.Cms.Core.Models.Link;
                        var url = string.Empty;
                        var subLinks = content.Value("subLinks");
                        if (link != null)
                        {
                            url = link.Url;
                        }

                        if (subLinks != null)
                        {
                            var links = subLinks as IEnumerable<Umbraco.Cms.Core.Models.Link>;
                            if (links != null && links.Any())
                            {
                                <li class="dropdown__item">
                                    <div class="nav__link">
                                        @title <i class="ri-arrow-down-s-line dropdown__arrow"></i>
                                    </div>

                                    <ul class="dropdown__menu">
                                        @foreach (var subLink in links)
                                        {
                                            <li>
                                                <a class="dropdown__link" href="@subLink.Url" target="@subLink.Target">@subLink.Name</a>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                            else
                            {
                                <li><a class="nav__link" href="@url">@title</a></li>
                            }
                        }
                    }
                }
            </ul>
        </div>
    </nav>
</header>


<script>
    const showMenu = (toggleId, navId) =>{
   const toggle = document.getElementById(toggleId),
         nav = document.getElementById(navId)

   toggle.addEventListener('click', () =>{
       // Add show-menu class to nav menu
       nav.classList.toggle('show-menu')

       // Add show-icon to show and hide the menu icon
       toggle.classList.toggle('show-icon')
   })
}

showMenu('nav-toggle','nav-menu')
</script>